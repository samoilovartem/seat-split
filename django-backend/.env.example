SECRET_KEY=<SECRET_KEY>
DEBUG=True
DOCKER_PGDB_URL=postgres://postgres:postgres@stt_pgdb:5432/postgres

INTERNAL_IPS=127.0.0.1

ROLLBAR_ACCESS_TOKEN=<ROLLBAR_ACCESS_TOKEN>

POSTGRES_HOST=127.0.0.1
POSTGRES_DB=postgres
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
PGUSER=postgres

CSRF_TRUSTED_ORIGINS=<CSRF_TRUSTED_ORIGINS>
ALLOWED_HOSTS='0.0.0.0, 127.0.0.1, django'
CORS_ALLOWED_ORIGINS=http://127.0.0.1:8000

# SMTP
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_HOST_USER=<EMAIL_HOST_USER>
EMAIL_HOST_PASSWORD=<EMAIL_HOST_PASSWORD>
EMAIL_USE_TLS=True
EMAIL_PROJECT_NAME='Seat Split'
EMAIL_FRONTEND_BASE_URL=<FRONTEND_URL_WITHOUT_PROTOCOL>
EMAIL_CONTENT_TYPE='html'

# SMTP2GO
SMTP2GO_FROM_EMAIL=<SMTP2GO_FROM_EMAIL>
SMTP2GO_SUPPORT_EMAIL=<SMTP2GO_SUPPORT_EMAIL>

# Redis
REDIS_URL=redis://stt_redis:6379
BROKER_CONNECTION_MAX_RETRIES=10
BROKER_POOL_LIMIT=5
REDIS_NEW_TICKETS_KEY_EXPIRE=300

CELERY_AGGREGATED_SLACK_NOTIFICATION_COUNTDOWN=10
CELERY_GENERAL_COUNTDOWN=5
CELERY_RESULT_BACKEND=django-db
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP=True

# Slack integration
STT_NOTIFICATIONS_BOT_API_TOKEN=<STT_NOTIFICATIONS_BOT_API_TOKEN>
STT_NOTIFICATIONS_CHANNEL_ID=<STT_NOTIFICATIONS_CHANNEL_ID>
STT_WEEKLY_ISSUES_REPORT_CHANNEL_ID=<STT_WEEKLY_ISSUES_REPORT_CHANNEL_ID>
DJANGO_HOST_URL=<DJANGO_HOST_URL>

# Emojis for Slack notifications
TICKET_CREATED=:season_ticket:
TICKET_HOLDER_TEAM_CREATED=:sparkle:
TICKET_DELISTING_REQUEST=:pricedincorrectly_or_listedincorrectly:
TICKET_RELISTING_REQUEST=:zap:

# General superuser
GENERAL_SUPERUSER_EMAIL=admin@example.com
GENERAL_SUPERUSER_PASSWORD=qwerty123@

HEALTH_CHECK_TOKEN=<HEALTH_CHECK_TOKEN>
DEFAULT_ANON_THROTTLE_RATE=15
DEFAULT_USER_THROTTLE_RATE=100

BUSINESS_TOTAL_EXPENSES=0.2
GENERATE_EMAILS_TOKEN=<GENERATE_EMAILS_TOKEN>

GITHUB_ACCESS_TOKEN=<GITHUB_ACCESS_TOKEN>
